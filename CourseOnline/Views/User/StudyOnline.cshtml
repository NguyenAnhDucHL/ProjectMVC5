@using CourseOnline.Models;
@{
    ViewBag.Title = "StudyOnline";
    Layout = "~/Views/Shared/_Study_Layout.cshtml";
    Lesson lesson = ViewBag.lesson;
    //List<QuestionModel> questionModels = ViewBag.examtest;
    //List<ExamTest> lstExamTests = ViewBag.testExamModels;
    CourseListModel subject = (CourseListModel)Session["course"];
    LessonQuizModel lessonQuiz = ViewBag.lessonQuiz;
    if (lessonQuiz == null)
    {
        lessonQuiz = new LessonQuizModel();
        lessonQuiz.test_id = -1;
    }
    int count = 1, countR = 0;
    int durationTime = 0;
    if (Session["time_test_exam"] != null)
    {
        if (Session["time_during_exam_test"] == null)
        {
            Session["time_during_exam_test"] = "0";
        }
        durationTime = Convert.ToInt32(Session["time_test_exam"].ToString()) - Convert.ToInt32(Session["time_during_exam_test"].ToString());
    }
}
<input hidden value="@Session["ExamTest"]" id="lsExamTest" />
<link href="~/Assets/customcss/pagination.css" rel="stylesheet" />
@if (subject == null)
{
    <h2>Error</h2>
}
else
{
    <div class="nav-tabs-custom">
        @if (subject != null)
        {
            <ul class="nav nav-tabs nav-justified">
                <li id="subjectname_study" class="active"><a href="#overview" data-toggle="tab" style="font-weight:bold; font-size: 40px">@subject.subject_name</a></li>
            </ul>
        }
        @if (ViewBag.lessonType == "HTML Lesson")
        {
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs nav-justified">
                    <li class="active"><a href="#overview" data-toggle="tab">Lesson Content</a></li>
                    <!-- /.tab-content -->
                </ul>
                <div class="tab-content">
                    <div class="active tab-pane" id="overview">
                        <h2>Lesson Objectives</h2>
                        <div class="form-group">
                            <label>@lesson.lesson_objecttive</label>
                        </div>
                        <h2>Description</h2>
                        <div class="form-group">
                            <label>@lesson.lesson_support</label>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.lessonType == "Video Lesson")
        {
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs nav-justified">
                    <li class="active"><a href="#overview" data-toggle="tab">Lesson Video</a></li>
                    <!-- /.tab-content -->
                </ul>
                <div class="tab-content">
                    <div class="active tab-pane" id="content">
                        <div class="youtube-responsive-container">
                            <iframe width="560" height="315" src="@lesson.lesson_link" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>
                            </iframe>
                        </div>
                    </div>
                </div>
            </div>
        }
        @if (ViewBag.lessonType == "Quiz")
        {
            if (Session["ExamTest"] != null)
            {
                List<QuestionModel> examtest = Session["ExamTest"] as List<QuestionModel>;
                <div class="Quiz" onselectstart='return false;'>
                    <h5 style="margin-top: 4%;"> <span class="label label-info">Time Remaining : <span id="minRemaining"></span> : <span id="secRemaining"></span></span> </h5>
                    <h4 style="margin-top: 4%;"> <span class="label label-info">Total Question : @examtest.Count() </span> </h4>
                    @if (examtest != null && examtest.Any())
                    {
                        <div class="contents">
                            @foreach (var question in examtest)
                            {
                                <div class="BlockQ" style="border: 1px solid #bdbdbd; width: 75%; border-radius: 4px; margin-top: 40px; background-color: #f0ffff; padding: 8px;">

                                    <div class="Question" style="padding: 2%;">
                                        <span class="label label-warning"> @string.Format("{0}{1}.", "Q", count)</span>
                                        <span id="@string.Format("{0}{1}", "ID_Q", count)" style="display:none;">@question.questionID</span>
                                        <p style="display: inline; padding: 2%;" id="@string.Format("{0}{1}", "Q", count)">@question.questiontext</p>
                                    </div>

                                    <div class="Choices" style="margin-left: 8%;">

                                        @foreach (var answer in question.answers)
                                        {
                                            <label class="radio-inline">
                                                <input type="radio" name="@string.Format("{0}{1}", "inlineRadioOptions",count)" id="@string.Format("{0}{1}", "inlineRadio", countR)" value="@answer.answertext" style="margin-left: -16px;"> @answer.answertext
                                            </label><br />
                                            countR++;
                                        }

                                    </div> <!--END Choices-->

                                    <div id="@string.Format("{0}{1}{2}", "Ans","Q", count)">


                                    </div>

                                </div> <!-- END BlockQ -->
                                count++;
                            }
                        </div>
                        <span id="countQuections" style="display:none;">@count</span>
                        <button type="button" id="SubmitQuiz" class="btn btn-default" value="Submit Quiz"><span class="glyphicon glyphicon-ok"></span> Submit Quiz </button>
                    }
                </div>

            }
            else
            {
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs nav-justified">
                        <li class="active"><a href="#overview" data-toggle="tab">Quiz Test</a></li>
                        <!-- /.tab-content -->
                    </ul>
                    <div class="tab-content">
                        <div class="active tab-pane" id="content">
                            <a href="#" onclick="StartQuiz()" class="btn btn-primary rounded-0 btn-lg px-5">Start Quiz</a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
    <div class="modal fade" id="MyModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4>Join Test</h4>
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                </div>
                <div class="modal-body">
                    <h5>Input Password</h5>
                    <form id="form">
                        <fieldset id="SubmitForm">
                            <div class="form-group">
                                <input id="slPassword" value="" />
                            </div>
                            <div class="form-group">
                                <a href="#" class="btn btn-block btn-danger" id="VerifyPassword">Verify Password</a>
                            </div>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@if (Session["ExamTest"] != null)
{
    <script>
        window.onbeforeunload = function () {
            return "Leaving this page will reset the wizard";
        };
        //function preventBack() { window.history.forward(); }
        //setTimeout("preventBack()", 0);
        //window.onunload = function () { null };

    </script>
}

@section scripts
{
    <script src="~/Assets/customjs/pagination.js"></script>
    <script type="text/javascript">
        var counter = {};
        counter.end = @durationTime;
        counter.min = document.getElementById("minRemaining");
        counter.sec = document.getElementById("secRemaining");
        var demo = document.getElementById('lsExamTest').value;
        function startTick(durationTime) {
            if (demo == "") return;
            var _tick = setInterval(function () {
                if (counter.end > 0) {
                    counter.end = counter.end - 1;
                    var secs = counter.end;
                    var mins  = Math.floor(secs / 60);
                    secs -= mins * 60;
                    counter.min.innerHTML = mins;
                    counter.sec.innerHTML = secs;
                } else {
                    clearInterval(_tick);
                    timeup();
                }
            }, 1000);
        }
        startTick();


          function timeup() {
            //count Questions
            var sel = $('#countQuections').text();

            console.log(sel);

            var resultQuiz = [], countQuestion = parseInt(sel), question = {}, j = 1;

            for (var i = 1; i < countQuestion; i++) {
                question = {
                    questionID: $('#ID_Q' + i).text(),
                    questiontext: $('#Q' + i).text(),
                    answertext: $('input[name=inlineRadioOptions' + i + ']:checked').val()
                }
                resultQuiz.push(question);
            }

            $.ajax({

                type: 'POST',
                url: '@Url.Action("SubmitQuiz", "Home")',
                data: { resultQuiz },

                success: function (response) {
                    window.location.href = '@Url.Action("YourCourse","Home")';
                },
                error: function (response) {
                    errorAlert("Somthing wrong timeup");
                }
            })
            console.log(resultQuiz);
        }

        function StartQuiz() {
           $("#MyModal").modal();
        }

        $("#VerifyPassword").click(function () {
        $.ajax({
            url: '@Url.Action("checkExamTest","Home")',
            type: "POST",
            data: { test_id : @lessonQuiz.test_id, test_password: $("#slPassword").val()},
            dataType: "json",
            success: (response) => {
                if (response.success) {
                    @*window.open('@Url.Action("LessonDetail", "Home")?id = ' + @lesson.lesson_id);
                    window.close();*@
                     window.location.href = '@Url.Action("Home_User","Home")';
                    window.history.pushState(null, "", window.location.href);
                    window.onpopstate = function () {
                       window.history.pushState(null, "", window.location.href);
                    };
                    window.open('@Url.Action("LessonDetail", "Home")?id = ' + @lesson.lesson_id)
                }
                else {
                    errorAlert("Your password is incorrect");
                }
            },
            error: (response) => { errorAlert("Opps!! Something wrong!") }
        });
        });


        $(document).ready(function () {
                $("#tab").pagination({
                  items: 1,
                  contents: 'contents',
                  previous: 'Previous',
                  next: 'Next',
                  position: 'bottom',
                  });
                $('#SubmitQuiz').on('click', function () {

                //count Questions
                var sel = $('#countQuections').text();

                console.log(sel);

                var resultQuiz = [], countQuestion = parseInt(sel), question = {}, j = 1;
                    for (var i = 1; i < countQuestion; i++) {
                    question = {
                        questionID: $('#ID_Q'+ i).text(),
                        questiontext: $('#Q' + i).text(),
                        answertext: $('input[name=inlineRadioOptions' + i + ']:checked').val()
                    }
                    resultQuiz.push(question);
                }

                $.ajax({

                    type: 'POST',
                    url: '@Url.Action("SubmitQuiz", "Home")',
                    data: { resultQuiz },

                    success: function (response) {

                        if (response.result.length > 0)
                        {
                            window.location.href = '@Url.Action("Home_User","Home")';
                        }
                        else
                        {
                            errorAlert("Something Wrong");
                        }
                    },
                    error: function (response) {
                        errorAlert("Somthing wrong");
                    }
                });

                console.log(resultQuiz);

            });
        });
    </script>
}
